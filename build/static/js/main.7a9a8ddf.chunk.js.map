{"version":3,"sources":["components/utils/config.js","components/utils/near.js","components/utils/Cover.js","components/Wallet.js","cover.png","components/utils/Loader.js","components/utils/functions.js","components/form.js","components/Direct.js","components/Functions.js","components/admin.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Cover","name","coverImg","className","style","background","minHeight","maxWidth","src","alt","Button","onClick","variant","defaultProps","Wallet","address","amount","symbol","destroy","Badge","bg","text","Dropdown","Toggle","align","id","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","Loader","role","GAS","verificationType","ID","verificationPerUser","accountID","verifyAccount","Type","verification","Form","userID","useState","loading","setLoading","showform","setForm","addVerification","userId","type","console","log","Direct","vType","SetVerificationType","Verification","useEffect","Functions","setUserId","createNewProfile","createProfile","Admin","usersList","setUserList","getUsers","getPendingUsers","verifyUser","length","map","then","App","balance","setBalance","getBalance","useCallback","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch","error"],"mappings":"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","file":"static/js/main.7a9a8ddf.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'verify.kareemayman.testnet'; // line 1\n\nfunction environment(env) {\n  switch (env) {\n    case 'mainnet': // line 5\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org',\n        explorerUrl: 'https://explorer.mainnet.near.org',\n      };\n    case 'testnet': // line 14\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org',\n        explorerUrl: 'https://explorer.testnet.near.org',\n      };\n    default:\n      throw Error(`Unknown environment '${env}'.`);\n  }\n}\n\nexport default environment;\n","import { Contract, WalletConnection, connect, keyStores } from 'near-api-js';\n\nimport environment from './config';\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\n\nconst nearEnv = environment('testnet');\n\nexport async function initializeContract() {\n  const near = await connect(\n    Object.assign(\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\n      nearEnv\n    )\n  );\n  window.walletConnection = new WalletConnection(near);\n  window.accountId = window.walletConnection.getAccountId();\n  window.contract = new Contract(\n    window.walletConnection.account(),\n    nearEnv.contractName,\n    {\n      viewMethods: [ \"getusers\", \"verificationPerUser\",\"getPendingUsers\"],\n      changeMethods: [\"verifyAccount\", \"createProfile\",\"isAccountVerified\"],\n    }\n  );\n}\n\nexport async function accountBalance() {\n  return formatNearAmount(\n    (await window.walletConnection.account().getAccountBalance()).total,\n    2\n  );\n}\n\nexport async function getAccountId() {\n  return window.walletConnection.getAccountId();\n}\n\nexport function login() {\n  window.walletConnection.requestSignIn(nearEnv.contractName);\n}\n\nexport function logout() {\n  window.walletConnection.signOut();\n  window.location.reload();\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to create a profile.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">internship project</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;","import { Badge, Dropdown, Spinner, Stack } from 'react-bootstrap';\r\n\r\nimport React from 'react';\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Badge className='me-3' bg='info' text='dark'>\r\n          {address}\r\n        </Badge>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant='light'\r\n            align='end'\r\n            id='dropdown-basic'\r\n            className='d-flex align-items-center border rounded-pill py-1'>\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className='ms-1'> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation='border' size='sm' className='opacity-25' />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className='shadow-lg border-0'>\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target='_blank'>\r\n              <Stack direction='horizontal' gap={2}>\r\n                <i className='bi bi-person-circle fs-4' />\r\n                <span className='font-monospace'>{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as='button'\r\n              className='d-flex align-items-center'\r\n              onClick={() => {\r\n                destroy();\r\n              }}>\r\n              <i className='bi bi-box-arrow-right me-2 fs-4' />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;","export default __webpack_public_path__ + \"static/media/cover.c2b96abe.png\";","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;","import {parseNearAmount} from \"near-api-js/lib/utils/format\";\r\nconst GAS = 100000000000000;\r\n\r\nexport function isAccountVerified(ID) {\r\n  return window.contract.isAccountVerified({ accountID :  ID} ,GAS , parseNearAmount(\"1\"));\r\n}\r\n\r\nexport  function createProfile() {\r\n  return window.contract.createProfile();\r\n}\r\n\r\nexport  function verificationType(ID) {\r\n  return window.contract.verificationPerUser({ accountID :  ID});\r\n}\r\n\r\nexport  function getPendingUsers() {\r\n  return window.contract.getPendingUsers();\r\n}\r\n\r\nexport async function verifyAccount(ID,Type){\r\n  await window.contract.verifyAccount({accountID : ID, verification : Type } ,GAS); \r\n}\r\n\r\nexport async function getusersList(){\r\n  return window.contract.getusers(); \r\n}","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport Direct from \"./Direct\"\r\nimport Loader from \"./utils/Loader\";\r\nimport {\r\n    verifyAccount,\r\n  } from \"./utils/functions\";\r\nconst Form = ({userID}) => {\r\nconst [ID, setUserID] = useState(userID);\r\nconst [loading, setLoading] = useState(false);\r\nconst [showform, setForm] = useState(true);\r\n\r\nconst addVerification = async (userId , type) => {\r\n    try {\r\n      setLoading(true);\r\n      await verifyAccount(userId, type);\r\n      setForm(false)\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    };\r\n  }\r\nreturn (\r\n    <>\r\n    {!loading ? (\r\n        <div>\r\n        {showform ? (\r\n            <button align=\"middle\" onClick={() => addVerification( ID  , 1)}> Submit Form </button>\r\n        ) : ( <Direct ID = {ID}/>)}\r\n        </div>\r\n    ): ( <Loader />)}\r\n    </>\r\n)\r\n};\r\nexport default Form","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Form from \"./form\"\r\nimport { Checkmark } from \"react-checkmark\";\r\nimport {\r\n  verificationType,\r\n} from \"./utils/functions\";\r\n\r\n\r\nconst Direct = ({ID}) => {\r\n  const [vType, SetVerificationType] = useState(\" Verification Type Not Found\");\r\n  const Verification = async (userId) => {\r\n    try {\r\n      SetVerificationType(await verificationType(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(async() => {\r\n    await Verification(ID)\r\n  }, []);\r\n  if(vType === \"New\")\r\n  {\r\n    return (\r\n        <>\r\n        <Form userID = {ID}/>\r\n        </>\r\n      );\r\n  }\r\n  else if(vType === \"Spam\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is marked as a spam account</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Pending\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is Pending verification</h1>\r\n      <Loader />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Verified\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is verified successfully</h1> <Checkmark size={'large'} />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Rejected\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} verification rejected</h1>\r\n      </>\r\n    );\r\n  }\r\n  return <h1> Error : {vType}</h1>;\r\n};\r\nexport default Direct;","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Direct from \"./Direct\"\r\nimport {\r\n  createProfile,\r\n} from \"./utils/functions\";\r\n\r\nconst Functions = () => {\r\n  const [userId, setUserId] = useState(\"ID\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      setUserId(window.walletConnection.account().accountId)\r\n      await (createProfile());\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n  useEffect(async() => {\r\n    await createNewProfile()\r\n  }, []);\r\n\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n      <>\r\n      <Direct ID = {userId}/>\r\n      </>\r\n\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport {\r\n    verifyAccount,\r\n    getPendingUsers,\r\n  } from \"./utils/functions\";\r\n  const Admin = () => {\r\n    const [usersList, setUserList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const getUsers = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setUserList(await getPendingUsers())\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      const verifyUser = async (ID) => {\r\n        try {\r\n            setLoading(true);\r\n            await verifyAccount(ID, 3);\r\n          } catch (error) {\r\n            console.log(error);\r\n          } finally {\r\n            setLoading(false);\r\n          };\r\n      };\r\n      useEffect(async() => {\r\n        await getUsers()\r\n      }, []);    \r\n      if(usersList.length === 0)\r\n      {\r\n        return(\r\n          <>\r\n          <h1 align= \"middle\"> All Users Have Been Verified!</h1>\r\n          </>\r\n        )\r\n      }\r\n      else\r\n      {\r\n      return (\r\n        <>\r\n          {!loading ? (\r\n            <>\r\n            <ol>\r\n             {usersList.map((usersList) => (\r\n              <li>{usersList} <button onClick={() => verifyUser(usersList).then(getUsers)}>Verify</button> </li>\r\n            ))}\r\n            </ol>\r\n            </>\r\n      \r\n          ) : (\r\n            <Loader />\r\n          )}\r\n        </>\r\n      );\r\n        }\r\n  }\r\n  export default Admin;","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { login, logout as destroy, accountBalance } from \"./components/utils/near\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport coverImg from \"./cover.png\";\r\nimport \"./App.css\";\r\nimport Functions from \"./components/Functions\"\r\nimport Admin from \"./components/admin\"\r\n\r\nconst App = function AppWrapper() {\r\n  const account = window.walletConnection.account();\r\n\r\n  const [balance, setBalance] = useState('0');\r\n\r\n  const getBalance = useCallback(async () => {\r\n    if (account.accountId) {\r\n      setBalance(await accountBalance());\r\n    }\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    getBalance();\r\n  }, [getBalance]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {account.accountId ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-5\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={account.accountId}\r\n                amount={balance}\r\n                symbol=\"NEAR\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <dev> <h1 align=\"middle\">Verified Accounts</h1></dev>\r\n          <main>\r\n          {account.accountId === \"kareemayman.testnet\" ? (\r\n             <Admin/>\r\n          ): \r\n            (\r\n              <Functions/>\r\n            )\r\n          }\r\n          </main>\r\n        </Container> \r\n      ) : (\r\n        <Cover name=\"Verified Accounts\" login={login} coverImg={coverImg}/>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./components/utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();"],"sourceRoot":""}