{"version":3,"sources":["components/utils/config.js","components/utils/near.js","components/utils/Cover.js","components/Wallet.js","cover.png","components/utils/loader.js","components/storageconfig.js","components/utils/functions.js","components/form.js","components/Direct.js","components/Functions.js","components/admin.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Cover","name","coverImg","className","style","background","minHeight","maxWidth","src","alt","Button","onClick","variant","defaultProps","Wallet","address","amount","symbol","destroy","Badge","bg","text","Dropdown","Toggle","align","id","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","Loader","role","app","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","db","getFirestore","colRef","collection","GAS","verificationType","ID","verificationPerUser","accountID","verifyAccount","Type","verification","getusersList","getUsers","Form","userID","useState","loading","setLoading","showform","setForm","urls","addVerification","userId","type","console","log","submit","setDoc","doc","FrontID","BackID","PicWithID","padding","fontSize","onChange","e","Newfile","files","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","err","getDownloadURL","then","url","paddingBottom","borderWidth","borderColor","alignItems","justifyContent","width","height","backgroundColor","borderRadius","Direct","vType","SetVerificationType","Verification","useEffect","Functions","setUserId","createNewProfile","createProfile","Admin","pendingList","newList","rejectedList","verifiedList","spamList","usersList","setUsers","list","setList","splitUsers","i","length","user","split","push","verifyUser","map","App","balance","setBalance","adminList","getBalance","useCallback","backgroundPosition","backgroundSize","backgroundRepeat","color","Container","fluid","Nav","isAdmin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch","error"],"mappings":"mTAAMA,EAAgBC,qJAAYD,eAAiB,6BA2BpCE,MAzBf,SAAqBC,GACnB,OAAQA,GACN,IAAK,UACH,MAAO,CACLC,UAAW,UACXC,QAAS,+BACTC,aAAcN,EACdO,UAAW,0BACXC,UAAW,kCACXC,YAAa,qCAEjB,IAAK,UACH,MAAO,CACLL,UAAW,UACXC,QAAS,+BACTC,aAAcN,EACdO,UAAW,kCACXC,UAAW,kCACXC,YAAa,qCAEjB,QACE,MAAMC,MAAM,wBAAD,OAAyBP,EAAzB,S,QClBXQ,EAAUT,EAAY,W,4CAErB,4BAAAU,EAAA,sEACcC,kBACjBC,OAAOC,OACL,CAAEC,KAAM,CAAEC,SAAU,IAAIC,YAAUC,8BAClCR,IAJC,OACCS,EADD,OAOLC,OAAOC,iBAAmB,IAAIC,mBAAiBH,GAC/CC,OAAOG,UAAYH,OAAOC,iBAAiBG,eAC3CJ,OAAOK,SAAW,IAAIC,WACpBN,OAAOC,iBAAiBM,UACxBjB,EAAQL,aACR,CACEuB,YAAa,CAAE,mBACfC,cAAe,CAAC,gBAAiB,gBAAgB,sBAAsB,cAdtE,4C,sBAmBA,SAAeC,IAAtB,+B,4CAAO,sBAAAnB,EAAA,kEACEoB,mBADF,SAEIX,OAAOC,iBAAiBM,UAAUK,oBAFtC,0BAE2DC,MAF3D,gCAGH,IAHG,4C,sBAWA,SAASC,IACdd,OAAOC,iBAAiBc,cAAczB,EAAQL,cAGzC,SAAS+B,IACdhB,OAAOC,iBAAiBgB,UACxBjB,OAAOkB,SAASC,S,oBCvCZC,EAAQ,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMP,EAAsB,EAAtBA,MAAOQ,EAAe,EAAfA,SAC5B,OAAkBA,EAEd,sBACEC,UAAU,yDACVC,MAAO,CAAEC,WAAY,OAAQC,UAAW,SAF1C,UAIE,sBAAKH,UAAU,0BAAf,UACE,qBACEA,UAAU,gCACVC,MAAO,CAAEG,SAAU,SAFrB,SAIE,qBAAKC,IAAKN,EAAUO,IAAI,OAE1B,6BAAKR,IACL,gFACA,cAACS,EAAA,EAAD,CACEC,QAASjB,EACTkB,QAAQ,gBACRT,UAAU,yBAHZ,+BAQF,mBAAGA,UAAU,yBAAb,mCAIC,MAOTH,EAAMa,aAAe,CACnBZ,KAAM,IAGOD,Q,oCCYAc,EAnDA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzC,OAAIH,EAEA,qCACE,cAACI,EAAA,EAAD,CAAOhB,UAAU,OAAOiB,GAAG,OAAOC,KAAK,OAAvC,SACGN,IAEH,eAACO,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CACEX,QAAQ,QACRY,MAAM,MACNC,GAAG,iBACHtB,UAAU,qDAJZ,SAKGa,EACC,qCACGA,EADH,IACW,uBAAMb,UAAU,OAAhB,cAAyBc,QAGpC,cAACS,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,KAAKzB,UAAU,iBAIpD,eAACmB,EAAA,EAASO,KAAV,CAAe1B,UAAU,qBAAzB,UACE,cAACmB,EAAA,EAASQ,KAAV,CACEC,KAAI,qDAAgDhB,GACpDiB,OAAO,SAFT,SAGE,eAACC,EAAA,EAAD,CAAOC,UAAU,aAAaC,IAAK,EAAnC,UACE,mBAAGhC,UAAU,6BACb,sBAAMA,UAAU,iBAAhB,SAAkCY,SAItC,cAACO,EAAA,EAASc,QAAV,IACA,eAACd,EAAA,EAASQ,KAAV,CACEO,GAAG,SACHlC,UAAU,4BACVQ,QAAS,WACPO,KAJJ,UAME,mBAAGf,UAAU,oCANf,yBAeH,MCpDM,MAA0B,kCCU1BmC,G,OAPA,kBACb,qBAAKnC,UAAU,gCAAf,SACE,cAACuB,EAAA,EAAD,CAASC,UAAU,SAASY,KAAK,SAASpC,UAAU,aAApD,SACE,sBAAMA,UAAU,kBAAhB,8B,yBCoBAqC,EAAMC,YArBW,CAEnBC,OAAQ,0CAERC,WAAY,mCAEZC,UAAW,mBAEXC,YAAY,oCAEZC,cAAe,+BAEfC,kBAAmB,eAEnBC,MAAO,4CAEPC,cAAe,iBAQbC,EAAUC,YAAWX,GACrBY,EAAKC,YAAab,GACXc,EAASC,YAAWH,EAAI,YAGtBF,ICjCTM,EAAM,KAUJ,SAASC,EAAiBC,GAChC,OAAO9E,OAAOK,SAAS0E,oBAAoB,CAAEC,UAAaF,IAmBrD,SAAeG,EAAtB,oC,4CAAO,WAA6BH,EAAGI,GAAhC,SAAA3F,EAAA,sEACCS,OAAOK,SAAS4E,cAAc,CAACD,UAAYF,EAAIK,aAAeD,GAAQN,GADvE,4C,sBAIA,SAAeQ,IAAtB,+B,4CAAO,sBAAA7F,EAAA,+EACES,OAAOK,SAASgF,YADlB,4C,sBC1BP,IAoJeC,EApJF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACdC,mBAASD,GAAfT,EADoB,sBAEGU,oBAAS,GAFZ,mBAEpBC,EAFoB,KAEXC,EAFW,OAGCF,oBAAS,GAHV,mBAGpBG,EAHoB,KAGVC,EAHU,OAIdJ,mBAAS,IAAjBK,EAJsB,oBAMrBC,EAAe,uCAAG,WAAOC,EAAQC,GAAf,SAAAzG,EAAA,sEAEpBmG,GAAW,GAFS,SAGdT,EAAcc,EAAQC,GAHR,OAIpBJ,GAAQ,GAJY,gDAMpBK,QAAQC,IAAR,MANoB,yBAQpBR,GAAW,GARS,4EAAH,wDA4DrB,IAAMS,EAAM,uCAAG,sBAAA5G,EAAA,6DACb0G,QAAQC,IAAIL,GADC,SAEPO,YAAOC,YAAI3B,EAAQI,GAAK,CAC5BwB,QAAST,EAAK,GACdU,OAAQV,EAAK,GACbW,UAAWX,EAAK,KALL,OAObC,EAAgBhB,EAAI,GAPP,2CAAH,qDASNtD,EAAQ,CACZiF,QAAS,OACTC,SAAU,QAEZ,OACE,mCACIjB,EA8DA,cAAC,EAAD,IA7DA,qBACEjE,MAAO,CACLiF,QAAS,OACTC,SAAU,QAHd,SAMGf,EACC,sBAAM/C,MAAM,SAAZ,UACE,qBAAKpB,MAAO,CAACkF,SAAU,QAAvB,SACE,uFAEF,qBAAKlF,MAAOA,EAAZ,2CACA,uBACEwE,KAAK,OACLW,SA/Ed,SAAuBC,GACrB,IAAMC,EAAUD,EAAExD,OAAO0D,MAAM,GACzBC,EAAaC,YAAI1C,EAAD,iBAAoBuC,EAAQxF,OAC5C4F,EAAaC,YAAqBH,EAAYF,GACpDI,EAAWE,GACT,iBACA,SAACC,OACD,SAACC,GAAD,OAASpB,QAAQC,IAAImB,MACrB,WACEC,YAAeL,EAAWG,SAASJ,KAAKO,MAAK,SAACC,GAC5CvB,QAAQC,IAAIsB,GACZ3B,EAAK,GAAK2B,SAqEJhG,MAAO,CACLkF,SAAU,OACVe,cAAe,MAGnB,qBAAKjG,MAAOA,EAAZ,0CACA,uBACEwE,KAAK,OACLW,SAxEd,SAAsBC,GACpB,IAAMC,EAAUD,EAAExD,OAAO0D,MAAM,GACzBC,EAAaC,YAAI1C,EAAD,iBAAoBuC,EAAQxF,OAC5C4F,EAAaC,YAAqBH,EAAYF,GACpDI,EAAWE,GACT,iBACA,SAACC,OACD,SAACC,GAAD,OAASpB,QAAQC,IAAImB,MACrB,WACEC,YAAeL,EAAWG,SAASJ,KAAKO,MAAK,SAACC,GAC5CvB,QAAQC,IAAIsB,GACZ3B,EAAK,GAAK2B,SA8DJhG,MAAO,CACLkF,SAAU,OACVe,cAAe,MAGnB,qBAAKjG,MAAOA,EAAZ,8CACA,uBACEwE,KAAK,OACLW,SAjEd,SAAyBC,GACvB,IAAMC,EAAUD,EAAExD,OAAO0D,MAAM,GACzBC,EAAaC,YAAI1C,EAAD,iBAAoBuC,EAAQxF,OAC5C4F,EAAaC,YAAqBH,EAAYF,GACpDI,EAAWE,GACT,iBACA,SAACC,OACD,SAACC,GAAD,OAASpB,QAAQC,IAAImB,MACrB,WACEC,YAAeL,EAAWG,SAASJ,KAAKO,MAAK,SAACC,GAC5CvB,QAAQC,IAAIsB,GACZ3B,EAAK,GAAK2B,SAuDJhG,MAAO,CACLkF,SAAU,OACVe,cAAe,MAGnB,8BACE,wBACE1F,QAASoE,EACT3E,MAAO,CACLkG,YAAa,EACbC,YAAa,kBACbC,WAAY,SACZC,eAAgB,SAChBC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,aAAc,IAVlB,8BAkBJ,cAAC,EAAD,CAAQnD,GAAIA,S,SC5EToD,EAhEA,SAAC,GAAU,IAATpD,EAAQ,EAARA,GAAQ,EACcU,mBAAS,gCADvB,mBAChB2C,EADgB,KACTC,EADS,OAEO5C,oBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAIjB2C,EAAY,uCAAG,WAAOtC,GAAP,SAAAxG,EAAA,sEAEjBmG,GAAW,GAFM,KAGjB0C,EAHiB,SAGSvD,EAAiBkB,GAH1B,kFAKjBE,QAAQC,IAAR,MALiB,yBAOjBR,GAAW,GAPM,4EAAH,sDAalB,GAHA4C,oBAAS,sBAAC,sBAAA/I,EAAA,sEACF8I,EAAavD,GADX,2CAEP,KACCW,EAAQ,CACV,GAAa,QAAV0C,EAEH,OACI,mCACA,cAAC,EAAD,CAAM5C,OAAUT,MAIjB,GAAa,SAAVqD,EAEN,OACE,mCACA,qBAAIvF,MAAM,SAAV,cAAqBkC,EAArB,oCAIC,GAAa,YAAVqD,EAEN,OACE,mCACA,qBAAIvF,MAAM,SAAV,cAAqBkC,EAArB,gCAIC,GAAa,aAAVqD,EAEN,OACE,qCACA,qBAAIvF,MAAM,SAAV,cAAqBkC,EAArB,+BADA,IACuD,cAAC,YAAD,CAAW9B,KAAM,aAIvE,GAAa,aAAVmF,EAEN,OACE,mCACA,qBAAIvF,MAAM,SAAV,cAAqBkC,EAArB,8BAQJ,OAAO,cAAC,EAAD,KC9BMyD,EAjCG,WAAO,IAAD,EACM/C,mBAAS,MADf,mBACfO,EADe,KACPyC,EADO,OAEQhD,oBAAS,GAFjB,mBAEfC,EAFe,KAENC,EAFM,KAIhB+C,EAAgB,uCAAG,sBAAAlJ,EAAA,sEAErBmG,GAAW,GACX8C,EAAUxI,OAAOC,iBAAiBM,UAAUJ,WAHvB,SHHlBH,OAAOK,SAASqI,gBGGE,uDAMrBzC,QAAQC,IAAR,MANqB,yBAQrBR,GAAW,GARU,4EAAH,qDAexB,OAJE4C,oBAAS,sBAAC,sBAAA/I,EAAA,sEACFkJ,IADE,2CAEP,IAGH,mCACIhD,EAMA,cAAC,EAAD,IALA,mCACA,cAAC,EAAD,CAAQX,GAAMiB,SCsPL4C,EAjRD,WAAO,IAAD,EACEnD,mBAAS,IAAxBoD,EADa,sBAEFpD,mBAAS,IAApBqD,EAFa,sBAGGrD,mBAAS,IAAzBsD,EAHa,sBAIGtD,mBAAS,IAAzBuD,EAJa,sBAKDvD,mBAAS,IAArBwD,EALa,sBAMUxD,mBAAS,IANnB,mBAMbyD,EANa,KAMFC,EANE,OAOM1D,oBAAS,GAPf,mBAOX2D,EAPW,KAOLC,EAPK,OAQY5D,oBAAS,GARrB,mBAQXC,EARW,KAQFC,EARE,KAUZ2D,EAAa,WACjBpD,QAAQC,IAAI+C,GACZ,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAUM,OAAQD,IAAK,CACzC,IAAIE,EAAOP,EAAUK,GAAGG,MAAM,KACd,aAAZD,EAAK,GACPT,EAAaW,KAAKF,EAAK,IACF,YAAZA,EAAK,GACdZ,EAAYc,KAAKF,EAAK,IACD,QAAZA,EAAK,GACdX,EAAQa,KAAKF,EAAK,IACG,aAAZA,EAAK,GACdV,EAAaY,KAAKF,EAAK,IACF,SAAZA,EAAK,IACdR,EAASU,KAAKF,EAAK,IAGvBJ,GAAQ,IAGJ/D,EAAQ,uCAAG,sBAAA9F,EAAA,sEAEbmG,GAAW,GACXO,QAAQC,IAAI,iBAHC,KAIbgD,EAJa,SAIE9D,IAJF,kCAKba,QAAQC,IAAI,SALC,kDAObD,QAAQC,IAAR,MAPa,yBASbR,GAAW,GATE,6EAAH,qDAuCRiE,EAAU,uCAAG,WAAO7E,EAAIkB,GAAX,SAAAzG,EAAA,sEAEfmG,GAAW,GAFI,SAGTT,EAAcH,EAAIkB,GAHT,sDAKfC,QAAQC,IAAR,MALe,uBAOfR,GAAW,GAPI,0EAAH,wDA0DhB,OAHA4C,qBAAU,WACRjD,MACC,IACE8D,EA2BH,mCACI1D,EAkHA,cAAC,EAAD,IAjHA,mCACE,sBAAKjE,MAAO,CAAEC,WAAY,QAA1B,UACE,gCACE,qCACA,6BACGoH,EAAQe,KAAI,SAACf,GAAD,OACX,6BAAKA,YAKX,gCACE,0CACA,6BACGE,EAAaa,KAAI,SAACb,GAAD,OAChB,+BACGA,EAAc,IACf,wBACAvH,MAAO,CACLsG,MAAO,IACPC,OAAQ,GACRC,gBAAiB,OACjBC,aAAc,IAEdlG,QAAS,kBACP4H,EAAWZ,EAAc,GAAGxB,KAAKlC,IARrC,sCAkBR,gCACE,sCACA,6BACG2D,EAASY,KAAI,SAACZ,GAAD,OACZ,6BAAKA,YAKX,gCACE,yCACA,6BACGJ,EAAYgB,KAAI,SAAChB,GAAD,OACf,+BACGA,EAAa,IACd,wBAASpH,MAAO,CACdsG,MAAO,IACPC,OAAQ,GACRC,gBAAiB,OACjBC,aAAc,IACblG,QAAS,kBAAM4H,EAAWf,EAAa,GAAGrB,KAAKlC,IALlD,+BAaR,gCACE,0CACA,6BACGyD,EAAac,KAAI,SAACd,GAAD,OAChB,+BACGA,EAAc,IACf,wBAAStH,MAAO,CACdsG,MAAO,IACPC,OAAQ,GACRC,gBAAiB,OACjBC,aAAc,IACblG,QAAS,kBAAM4H,EAAWb,EAAc,GAAGvB,KAAKlC,IALnD,6CAhGd,mCACII,EAiBA,cAAC,EAAD,IAhBA,wBACE1D,QAASsH,EACT7H,MAAO,CACLoB,MAAO,SACPgF,WAAY,SACZC,eAAgB,SAChBC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,OACjBC,aAAc,GACdvB,SAAU,IAVd,+BCzDKmD,EAlEH,WACV,IAAMtJ,EAAUP,OAAOC,iBAAiBM,UADR,EAEFiF,mBAAS,KAFP,mBAEzBsE,EAFyB,KAEhBC,EAFgB,OAGZvE,mBAAS,CAAC,uBAAwB,CAAC,uBAAwB,CAAC,sBAAuB,CAAC,qBAAjGwE,EAHyB,oBAehC,IAAMC,EAAaC,sBAAW,sBAAC,sBAAA3K,EAAA,0DACzBgB,EAAQJ,UADiB,4BAE3B4J,EAF2B,SAEVrJ,IAFU,8EAU/B,OAJA4H,qBAAU,WACR2B,MACC,CAACA,IAGF,mCACA,qBAAKzI,MAAO,CACVC,WAAY,OACZ0I,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBvC,MAAO,QACPC,OAAQ,QACRuC,MAAM,SAPR,SAQG/J,EAAQJ,UACP,eAACoK,EAAA,EAAD,CAAWC,MAAM,KAAjB,UACE,cAACC,EAAA,EAAD,CAAKlJ,UAAU,gCAAf,SACE,cAACkJ,EAAA,EAAIvH,KAAL,UACE,cAAC,EAAD,CACEf,QAAS5B,EAAQJ,UACjBiC,OAAQ0H,EACRzH,OAAO,OACPC,QAASA,QAIf,oCAAM,6CACN,sBAAMd,MAAO,CAACC,WAAY,QAA1B,SA1CR,WACE,IAAI,IAAI6H,EAAI,EAAGA,EAAEU,EAAUT,OAAOD,IAChC,GAAG/I,EAAQJ,YAAc6J,EAAUV,GACjC,OAAO,EAGX,OAAO,EAqCAoB,GACC,cAAC,EAAD,IAGE,cAAC,EAAD,SAMN,cAAC,EAAD,CAAOrJ,KAAK,oBAAoBP,MAAOA,EAAOQ,SAAUA,SCzDjDqJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,qBCGd5K,OAAOmL,gBbHA,WAAP,+BaGyBC,GACtB7D,MAAK,WACJ8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,YAG3BC,MAAMzF,QAAQ0F,OAEjBhB,O","file":"static/js/main.74610442.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'verify.kareemayman.testnet'; // line 1\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case 'mainnet': // line 5\r\n      return {\r\n        networkId: 'mainnet',\r\n        nodeUrl: 'https://rpc.mainnet.near.org',\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: 'https://wallet.near.org',\r\n        helperUrl: 'https://helper.mainnet.near.org',\r\n        explorerUrl: 'https://explorer.mainnet.near.org',\r\n      };\r\n    case 'testnet': // line 14\r\n      return {\r\n        networkId: 'testnet',\r\n        nodeUrl: 'https://rpc.testnet.near.org',\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: 'https://wallet.testnet.near.org',\r\n        helperUrl: 'https://helper.testnet.near.org',\r\n        explorerUrl: 'https://explorer.testnet.near.org',\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;\r\n","import { Contract, WalletConnection, connect, keyStores } from 'near-api-js';\r\n\r\nimport environment from './config';\r\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\r\n\r\nconst nearEnv = environment('testnet');\r\n\r\nexport async function initializeContract() {\r\n  const near = await connect(\r\n    Object.assign(\r\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n      nearEnv\r\n    )\r\n  );\r\n  window.walletConnection = new WalletConnection(near);\r\n  window.accountId = window.walletConnection.getAccountId();\r\n  window.contract = new Contract(\r\n    window.walletConnection.account(),\r\n    nearEnv.contractName,\r\n    {\r\n      viewMethods: [ \"getPendingUsers\"],\r\n      changeMethods: [\"verifyAccount\", \"createProfile\",\"verificationPerUser\",\"getUsers\"]\r\n    }\r\n  );\r\n}\r\n\r\nexport async function accountBalance() {\r\n  return formatNearAmount(\r\n    (await window.walletConnection.account().getAccountBalance()).total,\r\n    2\r\n  );\r\n}\r\n\r\nexport async function getAccountId() {\r\n  return window.walletConnection.getAccountId();\r\n}\r\n\r\nexport function login() {\r\n  window.walletConnection.requestSignIn(nearEnv.contractName);\r\n}\r\n\r\nexport function logout() {\r\n  window.walletConnection.signOut();\r\n  window.location.reload();\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to create a profile.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">internship project</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;","import { Badge, Dropdown, Spinner, Stack } from 'react-bootstrap';\r\n\r\nimport React from 'react';\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Badge className='me-3' bg='info' text='dark'>\r\n          {address}\r\n        </Badge>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant='light'\r\n            align='end'\r\n            id='dropdown-basic'\r\n            className='d-flex align-items-center border rounded-pill py-1'>\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className='ms-1'> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation='border' size='sm' className='opacity-25' />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className='shadow-lg border-0'>\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target='_blank'>\r\n              <Stack direction='horizontal' gap={1}>\r\n                <i className='bi bi-person-circle fs-4' />\r\n                <span className='font-monospace'>{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as='button'\r\n              className='d-flex align-items-center'\r\n              onClick={() => {\r\n                destroy();\r\n              }}>\r\n              <i className='bi bi-box-arrow-right me-2 fs-4' />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;","export default __webpack_public_path__ + \"static/media/cover.c2b96abe.png\";","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { collection } from \"firebase/firestore\";\r\n// Initialize Firebase\r\nconst firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyBvcOeJbT0Sn6a40Aj2xTfzJRhDt5GnWek\",\r\n  \r\n    authDomain: \"verified-profile.firebaseapp.com\",\r\n  \r\n    projectId: \"verified-profile\",\r\n\r\n    databaseURL:\"gs://verified-profile.appspot.com\",\r\n  \r\n    storageBucket: \"verified-profile.appspot.com\",\r\n  \r\n    messagingSenderId: \"811507154375\",\r\n  \r\n    appId: \"1:811507154375:web:a99a1d71c063273cc96de2\",\r\n  \r\n    measurementId: \"G-MKT1969NCS\"\r\n  \r\n  };\r\n \r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Firebase storage reference\r\nconst storage = getStorage(app);\r\nconst db = getFirestore(app);\r\nexport const colRef = collection(db, \"Profiles\");\r\n\r\n\r\nexport default storage;","import {parseNearAmount} from \"near-api-js/lib/utils/format\";\r\nconst GAS = 100000000000000;\r\n\r\nexport function isAccountVerified(ID) {\r\n  return window.contract.isAccountVerified({ accountID :  ID} ,GAS , parseNearAmount(\"1\"));\r\n}\r\n\r\nexport  function createProfile() {\r\n  return window.contract.createProfile();\r\n}\r\n\r\nexport  function verificationType(ID) {\r\n  return window.contract.verificationPerUser({ accountID :  ID});\r\n}\r\n\r\nexport  function getPendingUsers() {\r\n  return window.contract.getPendingUsers();\r\n}\r\nexport  function getNewUsers() {\r\n  return window.contract.getNewUsers();\r\n}\r\nexport  function getVerifiedUsers() {\r\n  return window.contract.getVerifiedUsers();\r\n}\r\nexport  function getRejectedUsers() {\r\n  return window.contract.getRejectedUsers();\r\n}\r\nexport  function getSpamUsers() {\r\n  return window.contract.getSpamUsers();\r\n}\r\n\r\nexport async function verifyAccount(ID,Type){\r\n  await window.contract.verifyAccount({accountID : ID, verification : Type } ,GAS); \r\n}\r\n\r\nexport async function getusersList(){\r\n  return window.contract.getUsers(); \r\n}","import React, {useState } from \"react\";\r\nimport Direct from \"./Direct\";\r\nimport Loader from \"./utils/loader\";\r\nimport { colRef } from \"./storageconfig\";\r\nimport storage from \"./storageconfig\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { verifyAccount } from \"./utils/functions\";\r\n\r\nconst Form = ({ userID }) => {\r\n  const [ID] = useState(userID);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showform, setForm] = useState(true);\r\n  var [urls] = useState([]);\r\n//check file size\r\n  const addVerification = async (userId, type) => {\r\n    try {\r\n      setLoading(true);\r\n      await verifyAccount(userId, type);\r\n      setForm(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  function handleFrontID(e) {\r\n    const Newfile = e.target.files[0];\r\n    const storageRef = ref(storage, `/files/${Newfile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, Newfile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          console.log(url);\r\n          urls[0] = url;\r\n        });\r\n      }\r\n    );\r\n  }\r\n  function handleBackID(e) {\r\n    const Newfile = e.target.files[0];\r\n    const storageRef = ref(storage, `/files/${Newfile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, Newfile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          console.log(url);\r\n          urls[1] = url;\r\n        });\r\n      }\r\n    );\r\n  }\r\n  function handlePicWithID(e) {\r\n    const Newfile = e.target.files[0];\r\n    const storageRef = ref(storage, `/files/${Newfile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, Newfile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          console.log(url);\r\n          urls[2] = url;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  const submit = async () => {\r\n    console.log(urls);\r\n    await setDoc(doc(colRef, ID), {\r\n      FrontID: urls[0],\r\n      BackID: urls[1],\r\n      PicWithID: urls[2],\r\n    });\r\n    addVerification(ID, 1);\r\n  };\r\n  const style = {\r\n    padding: \"10px\",\r\n    fontSize: \"24px\",\r\n  };\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <div\r\n          style={{\r\n            padding: \"10px\",\r\n            fontSize: \"30px\",\r\n          }}\r\n        >\r\n          {showform ? (\r\n            <div  align=\"middle\" >\r\n              <div style={{fontSize: \"35px\"}}>\r\n                <p>To be verified successfully Please upload 3 Pictures</p>\r\n              </div>\r\n              <div style={style}>1 - Picture of the ID front :</div>\r\n              <input\r\n                type=\"file\"\r\n                onChange={handleFrontID}\r\n                style={{\r\n                  fontSize: \"15px\",\r\n                  paddingBottom: 25,\r\n                }}\r\n              />\r\n              <div style={style}>2 - Picture of the ID back :</div>\r\n              <input\r\n                type=\"file\"\r\n                onChange={handleBackID}\r\n                style={{\r\n                  fontSize: \"15px\",\r\n                  paddingBottom: 25,\r\n                }}\r\n              />\r\n              <div style={style} >3 - Picture of you with the ID :</div>\r\n              <input\r\n                type=\"file\"\r\n                onChange={handlePicWithID}\r\n                style={{\r\n                  fontSize: \"15px\",\r\n                  paddingBottom: 35,\r\n                }}\r\n              />\r\n              <div>\r\n                <button\r\n                  onClick={submit}\r\n                  style={{\r\n                    borderWidth: 2,\r\n                    borderColor: \"rgba(0,0,0,0.2)\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: 500,\r\n                    height: 100,\r\n                    backgroundColor: \"#fff\",\r\n                    borderRadius: 50,\r\n                  }}\r\n                >\r\n                  Submit Form\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <Direct ID={ID} />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/loader\";\r\nimport Form from \"./form\"\r\nimport { Checkmark } from \"react-checkmark\";\r\nimport {\r\n  verificationType,\r\n} from \"./utils/functions\";\r\n\r\nconst Direct = ({ID}) => {\r\n  const [vType, SetVerificationType] = useState(\" Verification Type Not Found\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const Verification = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await verificationType(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }finally{\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(async() => {\r\n    await Verification(ID)\r\n  }, []);\r\n  if(!loading){\r\n    if(vType === \"New\")\r\n  {\r\n    return (\r\n        <>\r\n        <Form userID = {ID}/>\r\n        </>\r\n      );\r\n  }\r\n  else if(vType === \"Spam\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is marked as a spam account</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Pending\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is Pending verification</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Verified\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is verified successfully</h1> <Checkmark size={'large'} />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Rejected\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} verification rejected</h1>\r\n      </>\r\n    );\r\n  }\r\n  }\r\n  else{\r\n    <Loader/>\r\n  }\r\n  return <Loader/>\r\n};\r\nexport default Direct;","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/loader\";\r\nimport Direct from \"./Direct\"\r\nimport {\r\n  createProfile,\r\n} from \"./utils/functions\";\r\n\r\nconst Functions = () => {\r\n  const [userId, setUserId] = useState(\"ID\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      setUserId(window.walletConnection.account().accountId)\r\n      await (createProfile());\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n  useEffect(async() => {\r\n    await createNewProfile()\r\n  }, []);\r\n\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n      <>\r\n      <Direct ID = {userId}/>\r\n      </>\r\n\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"./utils/loader\";\r\nimport { getusersList, verifyAccount } from \"./utils/functions\";\r\nconst Admin = () => {\r\n  var [pendingList] = useState([]);\r\n  var [newList] = useState([]);\r\n  var [rejectedList] = useState([]);\r\n  var [verifiedList] = useState([]);\r\n  var [spamList] = useState([]);\r\n  var [usersList, setUsers] = useState([]);\r\n  const [list, setList] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const splitUsers = () => {\r\n    console.log(usersList);\r\n    for (let i = 0; i < usersList.length; i++) {\r\n      var user = usersList[i].split(\",\");\r\n      if (user[1] === \"Verified\") {\r\n        verifiedList.push(user[0]);\r\n      } else if (user[1] === \"Pending\") {\r\n        pendingList.push(user[0]);\r\n      } else if (user[1] === \"New\") {\r\n        newList.push(user[0]);\r\n      } else if (user[1] === \"Rejected\") {\r\n        rejectedList.push(user[0]);\r\n      } else if (user[1] === \"Spam\") {\r\n        spamList.push(user[0]);\r\n      }\r\n    }\r\n    setList(true);\r\n  };\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(\"setting users\");\r\n      setUsers(await getusersList());\r\n      console.log(\" done\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // const getPending = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       setPending(await getPendingUsers())\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  const refresh = async () => {\r\n    try {\r\n      setLoading(true);\r\n      pendingList = [];\r\n      newList = [];\r\n      rejectedList = [];\r\n      verifiedList = [];\r\n      spamList = [];\r\n      await splitUsers();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const verifyUser = async (ID, type) => {\r\n    try {\r\n      setLoading(true);\r\n      await verifyAccount(ID, type);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //   const getNew = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       setNew(await getNewUsers())\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   const getRejected = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       setRejected(await getRejectedUsers())\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   const getVerified = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       setVerified(await getVerifiedUsers())\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  //   const getSpam = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       setSpam(await getSpamUsers())\r\n  //     } catch (error) {\r\n  //       console.log(error);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n  if (!list) {\r\n    return (\r\n      <>\r\n        {!loading ? (\r\n          <button\r\n            onClick={splitUsers}\r\n            style={{\r\n              align: \"middle\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: 500,\r\n              height: 100,\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: 50,\r\n              fontSize: 30,\r\n            }}\r\n          >\r\n            Get Users List\r\n          </button>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <>\r\n          <div style={{ background: \"#000\" }}>\r\n            <div>\r\n              <h1>New</h1>\r\n              <ol>\r\n                {newList.map((newList) => (\r\n                  <li>{newList}</li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n\r\n            <div>\r\n              <h1>Verified</h1>\r\n              <ol>\r\n                {verifiedList.map((verifiedList) => (\r\n                  <li>\r\n                    {verifiedList}{\" \"}\r\n                    <button\r\n                    style={{\r\n                      width: 150,\r\n                      height: 30,\r\n                      backgroundColor: \"#fff\",\r\n                      borderRadius: 50,\r\n                    }}\r\n                      onClick={() =>\r\n                        verifyUser(verifiedList, 0).then(getUsers)\r\n                      }\r\n                    >\r\n                      Change to New\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n\r\n            <div>\r\n              <h1>Spam</h1>\r\n              <ol>\r\n                {spamList.map((spamList) => (\r\n                  <li>{spamList}</li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n\r\n            <div>\r\n              <h1>Pending</h1>\r\n              <ol>\r\n                {pendingList.map((pendingList) => (\r\n                  <li>\r\n                    {pendingList}{\" \"}\r\n                    <button  style={{\r\n                      width: 150,\r\n                      height: 30,\r\n                      backgroundColor: \"#fff\",\r\n                      borderRadius: 50,\r\n                    }} onClick={() => verifyUser(pendingList, 3).then(getUsers)}>\r\n                      Verify\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n\r\n            <div>\r\n              <h1>Rejected</h1>\r\n              <ol>\r\n                {rejectedList.map((rejectedList) => (\r\n                  <li>\r\n                    {rejectedList}{\" \"}\r\n                    <button  style={{\r\n                      width: 150,\r\n                      height: 30,\r\n                      backgroundColor: \"#fff\",\r\n                      borderRadius: 50,\r\n                    }} onClick={() => verifyUser(rejectedList, 0).then(getUsers)}>\r\n                      Change to New\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n          {/* <ol>\r\n             {pendingList.map((pendingList) => (\r\n              <li>{pendingList}   \"Pending\"   <button onClick={() => verifyUser(pendingList).then(getPending)}>Verify</button> </li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {newList.map((newList) => (\r\n              <li>{newList}   \"New\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {rejectedList.map((rejectedList) => (\r\n              <li>{rejectedList}   \"Rejected\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {verifiedList.map((verifiedList) => (\r\n              <li>{verifiedList}   \"Verified\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {spamList.map((spamList) => (\r\n              <li>{spamList}   \"Spam\"</li>\r\n            ))}\r\n            </ol> */}\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Admin;\r\n","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { login, logout as destroy, accountBalance } from \"./components/utils/near\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport coverImg from \"./cover.png\";\r\nimport \"./App.css\";\r\nimport Functions from \"./components/Functions\"\r\nimport Admin from \"./components/admin\"\r\n\r\nconst App = function AppWrapper() {\r\n  const account = window.walletConnection.account();\r\n  const [balance, setBalance] = useState(\"0\");\r\n  const [adminList] = useState([\"kareemayman.testnet\"], [\"aliabdallah.testnet\"], [\"mhassanist.testnet\"], [\"hamzatest.tesnet\"]);\r\n\r\n\r\n  function isAdmin(){\r\n    for(let i = 0; i<adminList.length;i++){\r\n      if(account.accountId === adminList[i]){\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const getBalance = useCallback(async () => {\r\n    if (account.accountId) {\r\n      setBalance(await accountBalance());\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getBalance();\r\n  }, [getBalance]);\r\n\r\n  return (\r\n    <>\r\n    <div style={{       \r\n      background: \"#000\",\r\n      backgroundPosition: 'center',\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat',\r\n      width: '100vw',\r\n      height: '100vh',\r\n      color:\"white\" }}>\r\n      {account.accountId ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-3\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={account.accountId}\r\n                amount={balance}\r\n                symbol=\"NEAR\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <div> <h1>VProfile</h1></div>\r\n          <main style={{background: \"#000\"}}>\r\n          {isAdmin()? (\r\n            <Admin/>\r\n          ): \r\n            (\r\n              <Functions/>\r\n            )\r\n          }\r\n          </main>\r\n        </Container> \r\n      ) : (\r\n        <Cover name=\"Verified Accounts\" login={login} coverImg={coverImg}/>\r\n      )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { initializeContract } from \"./components/utils/near\";\r\n\r\nimport \"bootstrap\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nwindow.nearInitPromise = initializeContract()\r\n  .then(() => {\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  })\r\n  .catch(console.error);\r\n\r\nreportWebVitals();"],"sourceRoot":""}