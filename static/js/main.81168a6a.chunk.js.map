{"version":3,"sources":["components/utils/config.js","components/utils/near.js","components/utils/Cover.js","components/Wallet.js","cover.png","components/utils/Loader.js","components/form.js","components/Direct.js","components/utils/functions.js","components/Functions.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Cover","name","coverImg","className","style","background","minHeight","maxWidth","src","alt","Button","onClick","variant","defaultProps","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","align","id","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","Loader","role","Form","userID","useState","IDFront","setFront","IDBack","setBack","photoID","setPhoto","handleSubmit","useCallback","addVerification","alert","type","value","onChange","e","Direct","ID","vType","GAS","Functions","verificationType","SetVerificationType","userId","setUserId","loading","setLoading","getVerification","isAccountVerified","accountID","parseNearAmount","console","log","createNewProfile","createProfile","useEffect","App","balance","setBalance","getBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch","error"],"mappings":"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","file":"static/js/main.81168a6a.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"kareemayman.testnet\"; // line 1\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case \"mainnet\": // line 5\r\n      return {\r\n        networkId: \"mainnet\",\r\n        nodeUrl: \"https://rpc.mainnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.near.org\",\r\n        helperUrl: \"https://helper.mainnet.near.org\",\r\n        explorerUrl: \"https://explorer.mainnet.near.org\",\r\n      };\r\n    case \"testnet\": // line 14\r\n      return {\r\n        networkId: \"testnet\",\r\n        nodeUrl: \"https://rpc.testnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.testnet.near.org\",\r\n        helperUrl: \"https://helper.testnet.near.org\",\r\n        explorerUrl: \"https://explorer.testnet.near.org\",\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;","import environment from \"./config\";\r\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\r\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\nconst nearEnv = environment(\"testnet\");\r\nexport async function initializeContract() {\r\n    const near = await connect(\r\n      Object.assign(\r\n        { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n        nearEnv\r\n      )\r\n    );\r\n    window.walletConnection = new WalletConnection(near);\r\n    window.accountId = window.walletConnection.getAccountId();\r\n    window.contract = new Contract(\r\n      window.walletConnection.account(),\r\n      nearEnv.contractName,\r\n      {\r\n        viewMethods: [ \"getusers\"],\r\n        changeMethods: [\"verifyAccount\", \"createProfile\",\"isAccountVerified\"],\r\n      }\r\n    );\r\n  }\r\n  export async function accountBalance() {\r\n  return formatNearAmount(\r\n    (await window.walletConnection.account().getAccountBalance()).total,1\r\n  );\r\n}\r\n\r\n\r\nexport function login() {\r\n  window.walletConnection.requestSignIn(nearEnv.contractName);\r\n}\r\n\r\nexport function logout() {\r\n  window.walletConnection.signOut();\r\n  window.location.reload();\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to create a profile.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">internship project</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;","export default __webpack_public_path__ + \"static/media/cover.c2b96abe.png\";","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport addVerification from \"./Functions\"\r\nconst Form = ({userID}) => {\r\nconst [IDFront, setFront] = useState(\"\");\r\nconst [IDBack, setBack] = useState(\"\");\r\nconst [photoID, setPhoto] = useState(\"\");\r\nconst handleSubmit =  useCallback(() => {\r\n    addVerification( userID  , 1)\r\n    alert(`ID front : ${IDFront} and Back ID : ${IDBack} and Photo With ID: ${photoID}`)\r\n});\r\nreturn(\r\n    <>\r\n    <h1>Please fill this for to verify your profile</h1>\r\n    <div>\r\n        <label> Google Drive link of your ID front:\r\n            <input \r\n                type=\"text\" \r\n                value={IDFront}\r\n                onChange={(e) => setFront(e.target.value)}\r\n            />\r\n        </label>\r\n    </div>\r\n    <div>\r\n        <label>Google Drive link of your ID Back:\r\n            <input \r\n                type=\"text\" \r\n                value={IDBack}\r\n                onChange={(e) => setBack(e.target.value)}\r\n            />\r\n        </label>\r\n    </div>\r\n    <div>\r\n        <label>Google Drive link of your Photo with the ID:\r\n            <input \r\n                type=\"text\" \r\n                value={photoID}\r\n                onChange={(e) => setPhoto(e.target.value)}\r\n            />\r\n        </label>\r\n    </div>\r\n    <button onClick={handleSubmit}> Submit Form </button>\r\n    </>\r\n)\r\n};\r\nexport default Form","import React from \"react\";\r\nimport Form from \"./form\" \r\nimport getVerification from \"./Functions\"\r\n\r\nconst Direct = ({ID , vType}) => {\r\n  if(vType === \"New\")\r\n  {\r\n    return (\r\n        <>\r\n        <Form userID = {ID}/>\r\n        </>\r\n      );\r\n  }\r\n  else if(vType === \"Spam\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is marked as a spam account</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Pending\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is Pending verification</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Verified\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is verified successfully</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Rejected\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} verification rejected</h1>\r\n      </>\r\n    );\r\n  }\r\n  return <h1> Error : {vType}</h1>;\r\n};\r\nexport default Direct;","import {parseNearAmount} from \"near-api-js/lib/utils/format\";\r\nconst GAS = 100000000000000;\r\n\r\nexport function isAccountVerified(ID) {\r\n  return window.contract.isAccountVerified({ accountID :  ID} ,GAS , parseNearAmount(\"1\"));\r\n}\r\n\r\nexport  function createProfile() {\r\n  return window.contract.createProfile();\r\n}\r\n\r\nexport async function verifyAccount(ID,Type){\r\n  await window.contract.verifyAccount({accountID : ID, verification : Type } ,GAS); \r\n}\r\n\r\nexport async function getusersList(){\r\n  return window.contract.getusers(); \r\n}","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Direct from \"./Direct\"\r\nimport {\r\n  isAccountVerified,\r\n  verifyAccount,\r\n  createProfile,\r\n  getusersList\r\n} from \"./utils/functions\";\r\n\r\n\r\nconst Functions = () => {\r\n  const [verificationType, SetVerificationType] = useState(\"None\");\r\n  const [userId, setUserId] = useState(\"None\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getVerification = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await isAccountVerified(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      setUserId(window.walletConnection.account().accountId)\r\n      await (createProfile());\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      await getVerification(userId)\r\n      setLoading(false);\r\n    }  \r\n};\r\n\r\nconst getUsers = async () => {\r\n  try {\r\n    setLoading(true);\r\n    (await getusersList())\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nconst addVerification = async (userId , type) => {\r\n  try {\r\n    setLoading(true);\r\n    await verifyAccount(userId, type);\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  };\r\n}\r\n  useEffect(async() => {\r\n    await createNewProfile()\r\n  }, []);\r\n\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n        <Direct ID = {userId} vType = {verificationType}/>\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { login, logout as destroy, accountBalance } from \"./components/utils/near\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport coverImg from \"./cover.png\";\r\nimport \"./App.css\";\r\nimport Functions from \"./components/Functions\"\r\n\r\nconst App = function AppWrapper() {\r\n  const account = window.walletConnection.account();\r\n  const [balance, setBalance] = useState(\"0\");\r\n\r\n\r\n  const getBalance = useCallback(async () => {\r\n    if (account.accountId) {\r\n      setBalance(await accountBalance());\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getBalance();\r\n  }, [getBalance]);\r\n\r\n  return (\r\n    <>\r\n      {account.accountId ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-5\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={account.accountId}\r\n                amount={balance}\r\n                symbol=\"NEAR\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <dev> <h1 align=\"middle\">Verified Accounts</h1></dev>\r\n          <main>\r\n          {account.accountId === \"Owner.testnet\" ? (\r\n            <h1>This is the owner</h1>\r\n            //Ali should do this part\r\n          ): \r\n            (\r\n              <Functions/>\r\n            )\r\n          }\r\n          </main>\r\n        </Container> \r\n      ) : (\r\n        <Cover name=\"Verified Accounts\" login={login} coverImg={coverImg}/>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initializeContract } from \"./components/utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch(console.error);\n\nreportWebVitals();"],"sourceRoot":""}