{"version":3,"sources":["components/utils/config.js","components/utils/near.js","components/utils/Cover.js","components/Wallet.js","cover.png","components/utils/loader.js","components/storageconfig.js","components/utils/functions.js","components/form.js","components/Direct.js","components/Functions.js","components/admin.js","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Cover","name","coverImg","className","style","background","minHeight","maxWidth","src","alt","Button","onClick","variant","defaultProps","Wallet","address","amount","symbol","destroy","Badge","bg","text","Dropdown","Toggle","align","id","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","Loader","role","app","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","db","getFirestore","colRef","collection","GAS","verificationType","ID","verificationPerUser","accountID","verifyAccount","Type","verification","Form","userID","useState","loading","setLoading","showform","setForm","urls","addVerification","userId","type","console","log","submit","setDoc","doc","FrontID","BackID","PicWithID","padding","fontSize","borderRightWidth","onChange","e","Newfile","files","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","err","getDownloadURL","then","url","Direct","vType","SetVerificationType","Verification","useEffect","Functions","setUserId","createNewProfile","createProfile","Admin","pendingList","setPending","newList","setNew","rejectedList","setRejected","verifiedList","setVerified","spamList","setSpam","getPending","getPendingUsers","verifyUser","getNew","getNewUsers","getRejected","getRejectedUsers","getVerified","getVerifiedUsers","getSpam","getSpamUsers","map","App","balance","setBalance","adminList","getBalance","useCallback","Container","fluid","Nav","i","length","isAdmin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch","error"],"mappings":"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","file":"static/js/main.e7fd3b0e.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'verify.kareemayman.testnet'; // line 1\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case 'mainnet': // line 5\r\n      return {\r\n        networkId: 'mainnet',\r\n        nodeUrl: 'https://rpc.mainnet.near.org',\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: 'https://wallet.near.org',\r\n        helperUrl: 'https://helper.mainnet.near.org',\r\n        explorerUrl: 'https://explorer.mainnet.near.org',\r\n      };\r\n    case 'testnet': // line 14\r\n      return {\r\n        networkId: 'testnet',\r\n        nodeUrl: 'https://rpc.testnet.near.org',\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: 'https://wallet.testnet.near.org',\r\n        helperUrl: 'https://helper.testnet.near.org',\r\n        explorerUrl: 'https://explorer.testnet.near.org',\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;\r\n","import { Contract, WalletConnection, connect, keyStores } from 'near-api-js';\r\n\r\nimport environment from './config';\r\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\r\n\r\nconst nearEnv = environment('testnet');\r\n\r\nexport async function initializeContract() {\r\n  const near = await connect(\r\n    Object.assign(\r\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n      nearEnv\r\n    )\r\n  );\r\n  window.walletConnection = new WalletConnection(near);\r\n  window.accountId = window.walletConnection.getAccountId();\r\n  window.contract = new Contract(\r\n    window.walletConnection.account(),\r\n    nearEnv.contractName,\r\n    {\r\n      viewMethods: [ \"getUsers\", \"verificationPerUser\", \"getPendingUsers\"],\r\n      changeMethods: [\"verifyAccount\", \"createProfile\",\"isAccountVerified\"],\r\n    }\r\n  );\r\n}\r\n\r\nexport async function accountBalance() {\r\n  return formatNearAmount(\r\n    (await window.walletConnection.account().getAccountBalance()).total,\r\n    2\r\n  );\r\n}\r\n\r\nexport async function getAccountId() {\r\n  return window.walletConnection.getAccountId();\r\n}\r\n\r\nexport function login() {\r\n  window.walletConnection.requestSignIn(nearEnv.contractName);\r\n}\r\n\r\nexport function logout() {\r\n  window.walletConnection.signOut();\r\n  window.location.reload();\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"mt-auto text-light mb-5\">\r\n          <div\r\n            className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n            style={{ maxWidth: \"320px\" }}\r\n          >\r\n            <img src={coverImg} alt=\"\" />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to create a profile.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">internship project</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;","import { Badge, Dropdown, Spinner, Stack } from 'react-bootstrap';\r\n\r\nimport React from 'react';\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Badge className='me-3' bg='info' text='dark'>\r\n          {address}\r\n        </Badge>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant='light'\r\n            align='end'\r\n            id='dropdown-basic'\r\n            className='d-flex align-items-center border rounded-pill py-1'>\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className='ms-1'> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation='border' size='sm' className='opacity-25' />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className='shadow-lg border-0'>\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target='_blank'>\r\n              <Stack direction='horizontal' gap={2}>\r\n                <i className='bi bi-person-circle fs-4' />\r\n                <span className='font-monospace'>{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as='button'\r\n              className='d-flex align-items-center'\r\n              onClick={() => {\r\n                destroy();\r\n              }}>\r\n              <i className='bi bi-box-arrow-right me-2 fs-4' />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;","export default __webpack_public_path__ + \"static/media/cover.c2b96abe.png\";","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center\">\r\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { collection } from \"firebase/firestore\";\r\n// Initialize Firebase\r\nconst firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyBvcOeJbT0Sn6a40Aj2xTfzJRhDt5GnWek\",\r\n  \r\n    authDomain: \"verified-profile.firebaseapp.com\",\r\n  \r\n    projectId: \"verified-profile\",\r\n\r\n    databaseURL:\"gs://verified-profile.appspot.com\",\r\n  \r\n    storageBucket: \"verified-profile.appspot.com\",\r\n  \r\n    messagingSenderId: \"811507154375\",\r\n  \r\n    appId: \"1:811507154375:web:a99a1d71c063273cc96de2\",\r\n  \r\n    measurementId: \"G-MKT1969NCS\"\r\n  \r\n  };\r\n \r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Firebase storage reference\r\nconst storage = getStorage(app);\r\nconst db = getFirestore(app);\r\nexport const colRef = collection(db, \"Profiles\");\r\n\r\n\r\nexport default storage;","import {parseNearAmount} from \"near-api-js/lib/utils/format\";\r\nconst GAS = 100000000000000;\r\n\r\nexport function isAccountVerified(ID) {\r\n  return window.contract.isAccountVerified({ accountID :  ID} ,GAS , parseNearAmount(\"1\"));\r\n}\r\n\r\nexport  function createProfile() {\r\n  return window.contract.createProfile();\r\n}\r\n\r\nexport  function verificationType(ID) {\r\n  return window.contract.verificationPerUser({ accountID :  ID});\r\n}\r\n\r\nexport  function getPendingUsers() {\r\n  return window.contract.getPendingUsers();\r\n}\r\nexport  function getNewUsers() {\r\n  return window.contract.getNewUsers();\r\n}\r\nexport  function getVerifiedUsers() {\r\n  return window.contract.getVerifiedUsers();\r\n}\r\nexport  function getRejectedUsers() {\r\n  return window.contract.getRejectedUsers();\r\n}\r\nexport  function getSpamUsers() {\r\n  return window.contract.getSpamUsers();\r\n}\r\n\r\nexport async function verifyAccount(ID,Type){\r\n  await window.contract.verifyAccount({accountID : ID, verification : Type } ,GAS); \r\n}\r\n\r\nexport async function getusersList(){\r\n  return window.contract.getUsers(); \r\n}","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport Direct from \"./Direct\";\r\nimport Loader from \"./utils/loader\";\r\nimport { colRef } from \"./storageconfig\";\r\nimport storage from \"./storageconfig\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { verifyAccount } from \"./utils/functions\";\r\n\r\nconst Form = ({ userID }) => {\r\n  const [ID] = useState(userID);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showform, setForm] = useState(true);\r\n  var [urls] = useState([]);\r\n\r\n  const addVerification = async (userId, type) => {\r\n    try {\r\n      setLoading(true);\r\n      await verifyAccount(userId, type);\r\n      setForm(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  function handleFrontID(e) {\r\n    const Newfile = e.target.files[0];\r\n    const storageRef = ref(storage, `/files/${Newfile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, Newfile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n      },\r\n      (err) => console.log(err),\r\n      () => {\r\n        // download url\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          console.log(url);\r\n          urls[0] = url;\r\n        });\r\n      }\r\n    );\r\n  }\r\n  function handleBackID(e) {\r\n    const Newfile = e.target.files[0];\r\n    const storageRef = ref(storage, `/files/${Newfile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, Newfile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n      },\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          console.log(url);\r\n          urls[1] = url;\r\n        });\r\n      }\r\n    );\r\n  }\r\n  function handlePicWithID(e) {\r\n    const Newfile = e.target.files[0];\r\n    const storageRef = ref(storage, `/files/${Newfile.name}`);\r\n    const uploadTask = uploadBytesResumable(storageRef, Newfile);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n      },\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\r\n          console.log(url);\r\n          urls[2] = url;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  const submit = async () => {\r\n    console.log(urls);\r\n    await setDoc(doc(colRef, ID), {\r\n      FrontID: urls[0],\r\n      BackID: urls[1],\r\n      PicWithID: urls[2],\r\n    });\r\n    addVerification( ID  , 1)\r\n  };\r\n  const style = {\r\n    padding: \"10px\",\r\n    fontSize: \"24px\",\r\n    borderRightWidth: \"10 px\",\r\n  };\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <div>\r\n          {showform ? (\r\n            <div>\r\n              <div style={style}>\r\n                <p1>To be verified successfully Please upload 3 Pictures</p1>\r\n              </div>\r\n              <div style={style}>1. Picture of the ID front</div>\r\n              <input type=\"file\" onChange={handleFrontID} />\r\n              <div style={style}>2. Picture of the ID back</div>\r\n              <input type=\"file\" onChange={handleBackID} />\r\n              <div style={style}>3. Picture of you with the ID</div>\r\n              <input type=\"file\" onChange={handlePicWithID} />\r\n              <div>\r\n                <button onClick={submit}> Submit Form </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <Direct ID={ID} />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/loader\";\r\nimport Form from \"./form\"\r\nimport { Checkmark } from \"react-checkmark\";\r\nimport {\r\n  verificationType,\r\n} from \"./utils/functions\";\r\n\r\nconst Direct = ({ID}) => {\r\n  const [vType, SetVerificationType] = useState(\" Verification Type Not Found\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const Verification = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await verificationType(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }finally{\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(async() => {\r\n    await Verification(ID)\r\n  }, []);\r\n  if(!loading){\r\n    if(vType === \"New\")\r\n  {\r\n    return (\r\n        <>\r\n        <Form userID = {ID}/>\r\n        </>\r\n      );\r\n  }\r\n  else if(vType === \"Spam\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is marked as a spam account</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Pending\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is Pending verification</h1>\r\n      <Loader />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Verified\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is verified successfully</h1> <Checkmark size={'large'} />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Rejected\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} verification rejected</h1>\r\n      </>\r\n    );\r\n  }\r\n  }\r\n  else{\r\n    <Loader/>\r\n  }\r\n  return <h1> Error : {vType}</h1>;\r\n};\r\nexport default Direct;","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/loader\";\r\nimport Direct from \"./Direct\"\r\nimport {\r\n  createProfile,\r\n} from \"./utils/functions\";\r\n\r\nconst Functions = () => {\r\n  const [userId, setUserId] = useState(\"ID\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      setUserId(window.walletConnection.account().accountId)\r\n      await (createProfile());\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n  useEffect(async() => {\r\n    await createNewProfile()\r\n  }, []);\r\n\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n      <>\r\n      <Direct ID = {userId}/>\r\n      </>\r\n\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;","import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/loader\";\r\nimport {\r\n    verifyAccount,\r\n    getPendingUsers,\r\n    getNewUsers,\r\n    getVerifiedUsers,\r\n    getRejectedUsers,\r\n    getSpamUsers,\r\n  } from \"./utils/functions\";\r\n  const Admin = () => {\r\n    const [pendingList, setPending] = useState([]);\r\n    const [newList, setNew] = useState([]);\r\n    const [rejectedList, setRejected] = useState([]);\r\n    const [verifiedList, setVerified] = useState([]);\r\n    const [spamList, setSpam] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const getPending = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setPending(await getPendingUsers())\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      const verifyUser = async (ID) => {\r\n        try {\r\n            setLoading(true);\r\n            await verifyAccount(ID, 3);\r\n          } catch (error) {\r\n            console.log(error);\r\n          } finally {\r\n            setLoading(false);\r\n          };\r\n      };\r\n\r\n      const getNew = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setNew(await getNewUsers())\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      const getRejected = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setRejected(await getRejectedUsers())\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      const getVerified = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setVerified(await getVerifiedUsers())\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      const getSpam = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setSpam(await getSpamUsers())\r\n        } catch (error) {\r\n          console.log(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      useEffect(async() => {\r\n        await getPending()\r\n        await getNew()\r\n        await getRejected()\r\n        await getVerified()\r\n        await getSpam()\r\n      }, []);\r\n   \r\n      return (\r\n        <>\r\n          {!loading ? (\r\n            <>\r\n            <ol>\r\n             {pendingList.map((pendingList) => (\r\n              <li>{pendingList}   \"Pending\"   <button onClick={() => verifyUser(pendingList).then(getPending)}>Verify</button> </li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {newList.map((newList) => (\r\n              <li>{newList}   \"New\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {rejectedList.map((rejectedList) => (\r\n              <li>{rejectedList}   \"Rejected\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {verifiedList.map((verifiedList) => (\r\n              <li>{verifiedList}   \"Verified\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            <ol>\r\n             {spamList.map((spamList) => (\r\n              <li>{spamList}   \"Spam\"</li>\r\n            ))}\r\n            </ol>\r\n\r\n            </>\r\n      \r\n          ) : (\r\n            <Loader />\r\n          )}\r\n        </>\r\n      );\r\n        \r\n  }\r\n  export default Admin;","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { login, logout as destroy, accountBalance } from \"./components/utils/near\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport coverImg from \"./cover.png\";\r\nimport \"./App.css\";\r\nimport Functions from \"./components/Functions\"\r\nimport Admin from \"./components/admin\"\r\n\r\nconst App = function AppWrapper() {\r\n  const account = window.walletConnection.account();\r\n  const [balance, setBalance] = useState(\"0\");\r\n  const [adminList] = useState([\"kareemayman.testnet\"], [\"aliabdallah.testnet\"], [\"mhassanist.testnet\"], [\"hamzatest.tesnet\"]);\r\n\r\n\r\n  function isAdmin(){\r\n    for(let i = 0; i<adminList.length;i++){\r\n      if(account.accountId === adminList[i]){\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const getBalance = useCallback(async () => {\r\n    if (account.accountId) {\r\n      setBalance(await accountBalance());\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    getBalance();\r\n  }, [getBalance]);\r\n\r\n  return (\r\n    <>\r\n      {account.accountId ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-5\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={account.accountId}\r\n                amount={balance}\r\n                symbol=\"NEAR\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <dev> <h1 align=\"middle\">Verified Accounts</h1></dev>\r\n          <main>\r\n          {isAdmin()? (\r\n            <Admin/>\r\n          ): \r\n            (\r\n              <Functions/>\r\n            )\r\n          }\r\n          </main>\r\n        </Container> \r\n      ) : (\r\n        <Cover name=\"Verified Accounts\" login={login} coverImg={coverImg}/>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { initializeContract } from \"./components/utils/near\";\r\n\r\nimport \"bootstrap\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nwindow.nearInitPromise = initializeContract()\r\n  .then(() => {\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  })\r\n  .catch(console.error);\r\n\r\nreportWebVitals();"],"sourceRoot":""}