{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Projects/verifiedprofilev2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/Projects/verifiedprofilev2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"D:/Projects/verifiedprofilev2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/Projects/verifiedprofilev2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar account_1 = require(\"./account\");\n\nvar connection_1 = require(\"./connection\");\n\nvar contract_1 = require(\"./contract\");\n\nvar account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\n\n\nvar Near = /*#__PURE__*/function () {\n  function Near(config) {\n    _classCallCheck(this, Near);\n\n    this.config = config;\n    this.connection = connection_1.Connection.fromConfig({\n      networkId: config.networkId,\n      provider: {\n        type: 'JsonRpcProvider',\n        args: {\n          url: config.nodeUrl\n        }\n      },\n      signer: config.signer || {\n        type: 'InMemorySigner',\n        keyStore: config.keyStore || config.deps.keyStore\n      }\n    });\n\n    if (config.masterAccount) {\n      // TODO: figure out better way of specifiying initial balance.\n      // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n      var initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n      this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n    } else if (config.helperUrl) {\n      this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n    } else {\n      this.accountCreator = null;\n    }\n  }\n  /**\n   * @param accountId near accountId used to interact with the network.\n   */\n\n\n  _createClass(Near, [{\n    key: \"account\",\n    value: function () {\n      var _account = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(accountId) {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                account = new account_1.Account(this.connection, accountId);\n                return _context.abrupt(\"return\", account);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function account(_x) {\n        return _account.apply(this, arguments);\n      }\n\n      return account;\n    }()\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n\n  }, {\n    key: \"createAccount\",\n    value: function () {\n      var _createAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(accountId, publicKey) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.accountCreator) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n\n              case 2:\n                _context2.next = 4;\n                return this.accountCreator.createAccount(accountId, publicKey);\n\n              case 4:\n                return _context2.abrupt(\"return\", new account_1.Account(this.connection, accountId));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createAccount(_x2, _x3) {\n        return _createAccount.apply(this, arguments);\n      }\n\n      return createAccount;\n    }()\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n\n  }, {\n    key: \"loadContract\",\n    value: function () {\n      var _loadContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(contractId, options) {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                account = new account_1.Account(this.connection, options.sender);\n                return _context3.abrupt(\"return\", new contract_1.Contract(account, contractId, options));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadContract(_x4, _x5) {\n        return _loadContract.apply(this, arguments);\n      }\n\n      return loadContract;\n    }()\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n\n  }, {\n    key: \"sendTokens\",\n    value: function () {\n      var _sendTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(amount, originator, receiver) {\n        var account, result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n                account = new account_1.Account(this.connection, originator);\n                _context4.next = 4;\n                return account.sendMoney(receiver, amount);\n\n              case 4:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result.transaction_outcome.id);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function sendTokens(_x6, _x7, _x8) {\n        return _sendTokens.apply(this, arguments);\n      }\n\n      return sendTokens;\n    }()\n  }]);\n\n  return Near;\n}();\n\nexports.Near = Near;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Near","bn_js_1","require","account_1","connection_1","contract_1","account_creator_1","config","connection","Connection","fromConfig","networkId","provider","type","args","url","nodeUrl","signer","keyStore","deps","masterAccount","initialBalance","default","accountCreator","LocalAccountCreator","Account","helperUrl","UrlAccountCreator","accountId","account","publicKey","Error","createAccount","contractId","options","sender","Contract","amount","originator","receiver","console","warn","sendMoney","result","transaction_outcome","id"],"sources":["D:/Projects/verifiedprofilev2/node_modules/near-api-js/lib/near.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}