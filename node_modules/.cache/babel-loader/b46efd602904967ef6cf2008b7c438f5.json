{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\verifiedprofilev2\\\\src\\\\components\\\\Functions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Loader from \"./utils/Loader\";\nimport Form from \"./form\";\nimport { isAccountVerified, verifyAccount, createProfile, getusersList } from \"./utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Functions = () => {\n  _s();\n\n  const [verificationType, SetVerificationType] = useState(\"None\");\n  const [Users, setUsers] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getVerification = async userId => {\n    try {\n      setLoading(true);\n      SetVerificationType(await isAccountVerified(userId));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createNewProfile = async () => {\n    try {\n      setLoading(true);\n      var ID = window.walletConnection.account().accountId;\n      alert(typeof ID);\n      setUserId(ID);\n      setUserId(await createProfile());\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      setLoading(true);\n      setUsers(await getusersList());\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addVerification = async (userId, type) => {\n    try {\n      setLoading(true);\n      alert(typeof userId);\n      await verifyAccount(userId, type);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    createNewProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getVerification({\n          userId\n        }),\n        children: \"Get verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addVerification({\n          userId\n        }, 1).then(getVerification({\n          userId\n        })),\n        children: \"Add verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"userId : \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Verification Type : \", verificationType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Functions, \"MdpDyzpH1SfGHWg/x3z2UvGEFMw=\");\n\n_c = Functions;\nexport default Functions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Functions\");","map":{"version":3,"names":["React","useState","useEffect","Loader","Form","isAccountVerified","verifyAccount","createProfile","getusersList","Functions","verificationType","SetVerificationType","Users","setUsers","userId","setUserId","loading","setLoading","getVerification","error","console","log","createNewProfile","ID","window","walletConnection","account","accountId","alert","getUsers","addVerification","type","then"],"sources":["D:/Projects/verifiedprofilev2/src/components/Functions.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Form from \"./form\"\r\nimport {\r\n  isAccountVerified,\r\n  verifyAccount,\r\n  createProfile,\r\n  getusersList\r\n} from \"./utils/functions\";\r\n\r\n\r\nconst Functions = () => {\r\n  const [verificationType, SetVerificationType] = useState(\"None\");\r\n  const [Users, setUsers] = useState([]);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getVerification = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await isAccountVerified(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      var ID = window.walletConnection.account().accountId\r\n      alert(typeof(ID))\r\n      setUserId(ID)\r\n      setUserId(await (createProfile()));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n\r\nconst getUsers = async () => {\r\n  try {\r\n    setLoading(true);\r\n    setUsers(await getusersList())\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nconst addVerification = async (userId , type) => {\r\n  try {\r\n    setLoading(true);\r\n    alert(typeof(userId))\r\n\r\n    await verifyAccount(userId, type);\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  };\r\n}\r\n  useEffect(() => {\r\n    createNewProfile()\r\n  }, []);\r\n\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n        <>\r\n          <button onClick={() => getVerification({userId})}>Get verification</button>\r\n          <button onClick={() => addVerification({userId} , 1).then(getVerification({userId} ))}>Add verification</button>\r\n          <div>userId : {userId}</div>\r\n          <div>Verification Type : {verificationType}</div>\r\n        </>\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}