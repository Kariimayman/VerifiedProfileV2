{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\verifiedprofilev2\\\\src\\\\components\\\\Functions.js\";\nimport React, { useState } from \"react\";\nimport Loader from \"./utils/Loader\";\nimport Form from \"./form\";\nimport { isAccountVerified, verifyAccount, createProfile, getusersList } from \"./utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [verificationType, SetVerificationType] = useState(\"None\");\nconst [Users, setUsers] = useState([]);\nconst [vLevel, setvLevel] = useState();\nconst [userId, setUserId] = useState(\"None\");\nconst [loading, setLoading] = useState(false);\n\nconst Functions = _ref => {\n  let {\n    userID\n  } = _ref;\n\n  if (userID) {\n    setUserId(userID);\n\n    const getVerification = async userId => {\n      try {\n        setLoading(true);\n        SetVerificationType(await isAccountVerified(userId));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const createNewProfile = async () => {\n      try {\n        setLoading(true);\n        setUserId(await createProfile());\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const getUsers = async () => {\n      try {\n        setLoading(true);\n        Users.push(await getusersList());\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const addVerification = async (userId, type) => {\n      try {\n        setLoading(true);\n        await verifyAccount(userId, type);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createNewProfile,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getUsers,\n          children: \"Get users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getVerification(window),\n          children: \"Get verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addVerification(\"kareemayman.testnet\", {\n            vLevel\n          }),\n          children: \"Add verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: vLevel,\n            onChange: e => setvLevel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Verification Type : \", verificationType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" Users List : \", Users.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 47\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n  ;\n};\n\n_c = Functions;\nexport default Functions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Functions\");","map":{"version":3,"names":["React","useState","Loader","Form","isAccountVerified","verifyAccount","createProfile","getusersList","verificationType","SetVerificationType","Users","setUsers","vLevel","setvLevel","userId","setUserId","loading","setLoading","Functions","userID","getVerification","error","console","log","createNewProfile","getUsers","push","addVerification","type","window","e","target","value","map"],"sources":["D:/Projects/verifiedprofilev2/src/components/Functions.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Form from \"./form\"\r\nimport {\r\n  isAccountVerified,\r\n  verifyAccount,\r\n  createProfile,\r\n  getusersList\r\n} from \"./utils/functions\";\r\n\r\nconst [verificationType, SetVerificationType] = useState(\"None\");\r\nconst [Users, setUsers] = useState([]);\r\nconst [vLevel, setvLevel] = useState();\r\nconst [userId, setUserId] = useState(\"None\");\r\nconst [loading, setLoading] = useState(false);\r\nconst Functions = ({userID}) => {\r\n if(userID)\r\n {\r\n  setUserId(userID)\r\n  const getVerification = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await isAccountVerified(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      setUserId(await (createProfile()));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n\r\nconst getUsers = async () => {\r\n  try {\r\n    setLoading(true);\r\n    Users.push(await getusersList())\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nconst addVerification = async (userId , type) => {\r\n  try {\r\n    setLoading(true);\r\n    await verifyAccount(userId, type);\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n}\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n        <>\r\n          <button onClick={createNewProfile}>Create Account</button>\r\n          <button onClick={getUsers}>Get users</button>\r\n          <button onClick={() => getVerification(window)}>Get verification</button>\r\n          <button onClick={() => addVerification(\"kareemayman.testnet\" , {vLevel})}>Add verification</button>\r\n          <label>\r\n            <input \r\n                type=\"text\" \r\n                value={vLevel}\r\n                onChange={(e) => setvLevel(e.target.value)}\r\n            />\r\n        </label>\r\n          <div>Verification Type : {verificationType}</div>\r\n          <div> Users List : {Users.map( e => <div>{ e }</div> )}\r\n        </div>\r\n        </>\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n};\r\n\r\nexport default Functions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}