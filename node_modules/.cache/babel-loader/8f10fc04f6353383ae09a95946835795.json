{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\verifiedprofilev2\\\\src\\\\components\\\\Functions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Loader from \"./utils/Loader\";\nimport Form from \"./form\";\nimport { isAccountVerified, verifyAccount, createProfile, getusersList } from \"./utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Functions = () => {\n  _s();\n\n  const [verificationType, SetVerificationType] = useState(\"None\");\n  const [Users, setUsers] = useState([]);\n  const [vLevel, setvLevel] = useState();\n  const [userId, setUserId] = useState(\"None\");\n  const [loading, setLoading] = useState(false);\n  setUserId(window.walletConnection.account().accountId);\n\n  const getVerification = async userId => {\n    try {\n      setLoading(true);\n      SetVerificationType(await isAccountVerified(userId));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createNewProfile = async () => {\n    try {\n      setLoading(true);\n      setUserId(await createProfile());\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      setLoading(true);\n      setUsers(await getusersList());\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addVerification = async (userId, type) => {\n    try {\n      setLoading(true);\n      await verifyAccount(userId, type);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewProfile,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUsers,\n        children: \"Get users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getVerification(window),\n        children: \"Get verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addVerification(\"kareemayman.testnet\", {\n          vLevel\n        }),\n        children: \"Add verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: vLevel,\n          onChange: e => setvLevel(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User ID  : \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Verification Type : \", verificationType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Users List : \", Users.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Functions, \"0HS0z9F/retuRADkleJ6BrePAjI=\");\n\n_c = Functions;\nexport default Functions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Functions\");","map":{"version":3,"names":["React","useState","Loader","Form","isAccountVerified","verifyAccount","createProfile","getusersList","Functions","verificationType","SetVerificationType","Users","setUsers","vLevel","setvLevel","userId","setUserId","loading","setLoading","window","walletConnection","account","accountId","getVerification","error","console","log","createNewProfile","getUsers","addVerification","type","e","target","value","map"],"sources":["D:/Projects/verifiedprofilev2/src/components/Functions.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Form from \"./form\"\r\nimport {\r\n  isAccountVerified,\r\n  verifyAccount,\r\n  createProfile,\r\n  getusersList\r\n} from \"./utils/functions\";\r\n\r\n\r\nconst Functions = () => {\r\n  \r\n  const [verificationType, SetVerificationType] = useState(\"None\");\r\n  const [Users, setUsers] = useState([]);\r\n  const [vLevel, setvLevel] = useState();\r\n  const [userId, setUserId] = useState(\"None\");\r\n  const [loading, setLoading] = useState(false);\r\n  setUserId(window.walletConnection.account().accountId)\r\n  const getVerification = async (userId) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await isAccountVerified(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      setUserId(await (createProfile()));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n\r\nconst getUsers = async () => {\r\n  try {\r\n    setLoading(true);\r\n    setUsers(await getusersList())\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nconst addVerification = async (userId , type) => {\r\n  try {\r\n    setLoading(true);\r\n    await verifyAccount(userId, type);\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n        <>\r\n          <button onClick={createNewProfile}>Create Account</button>\r\n          <button onClick={getUsers}>Get users</button>\r\n          <button onClick={() => getVerification(window)}>Get verification</button>\r\n          <button onClick={() => addVerification(\"kareemayman.testnet\" , {vLevel})}>Add verification</button>\r\n          <label>\r\n            <input \r\n                type=\"text\" \r\n                value={vLevel}\r\n                onChange={(e) => setvLevel(e.target.value)}\r\n            />\r\n        </label>\r\n        <div>User ID  : {userId}</div>\r\n          <div>Verification Type : {verificationType}</div>\r\n          <div> Users List : {Users.map( e => <div>{ e }</div> )}\r\n        </div>\r\n        </>\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}