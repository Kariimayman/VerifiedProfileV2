{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\verifiedprofilev2\\\\src\\\\components\\\\Direct.js\";\nimport React from \"react\";\nimport Form from \"./form\";\nimport getVerification from \"./Functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Direct = async _ref => {\n  let {\n    ID\n  } = _ref;\n  const vType = await getVerification(ID);\n\n  if (vType === \"New\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (vType === \"Spam\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", ID, \" is marked as a spam account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else if (vType === \"Pending\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", ID, \" is Pending verification\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else if (vType === \"Verified\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", ID, \" is verified successfully\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else if (vType === \"Rejected\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", ID, \" verification rejected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" Error : \", vType]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Direct;\nexport default Direct;\n\nvar _c;\n\n$RefreshReg$(_c, \"Direct\");","map":{"version":3,"names":["React","Form","getVerification","Direct","ID","vType"],"sources":["D:/Projects/verifiedprofilev2/src/components/Direct.js"],"sourcesContent":["import React from \"react\";\r\nimport Form from \"./form\" \r\nimport getVerification from \"./Functions\"\r\n\r\nconst Direct = async({ID}) => {\r\n  const vType = await getVerification(ID)\r\n  if(vType === \"New\")\r\n  {\r\n    return (\r\n        <>\r\n        <Form/>\r\n        </>\r\n      );\r\n  }\r\n  else if(vType === \"Spam\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is marked as a spam account</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Pending\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is Pending verification</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Verified\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is verified successfully</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Rejected\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} verification rejected</h1>\r\n      </>\r\n    );\r\n  }\r\n  return <h1> Error : {vType}</h1>;\r\n};\r\nexport default Direct;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,eAAP,MAA4B,aAA5B;;;;AAEA,MAAMC,MAAM,GAAG,cAAe;EAAA,IAAT;IAACC;EAAD,CAAS;EAC5B,MAAMC,KAAK,GAAG,MAAMH,eAAe,CAACE,EAAD,CAAnC;;EACA,IAAGC,KAAK,KAAK,KAAb,EACA;IACE,oBACI;MAAA,uBACA,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA;IADA,iBADJ;EAKD,CAPD,MAQK,IAAGA,KAAK,KAAK,MAAb,EACL;IACE,oBACE;MAAA,uBACA;QAAA,gBAAMD,EAAN;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAKD,CAPI,MAQA,IAAGC,KAAK,KAAK,SAAb,EACL;IACE,oBACE;MAAA,uBACA;QAAA,gBAAMD,EAAN;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAKD,CAPI,MAQA,IAAGC,KAAK,KAAK,UAAb,EACL;IACE,oBACE;MAAA,uBACA;QAAA,gBAAMD,EAAN;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAKD,CAPI,MAQA,IAAGC,KAAK,KAAK,UAAb,EACL;IACE,oBACE;MAAA,uBACA;QAAA,gBAAMD,EAAN;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAKD;;EACD,oBAAO;IAAA,wBAAcC,KAAd;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA3CD;;KAAMF,M;AA4CN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}