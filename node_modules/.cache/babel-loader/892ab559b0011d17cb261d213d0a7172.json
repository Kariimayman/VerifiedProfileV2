{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\verifiedprofilev2\\\\src\\\\components\\\\Direct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Loader from \"./utils/Loader\";\nimport Form from \"./form\";\nimport { Checkmark } from \"react-checkmark\";\nimport { verificationType } from \"./utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Direct = _ref => {\n  _s();\n\n  let {\n    ID\n  } = _ref;\n  const [vType, SetVerificationType] = useState(\" Verification Type Not Found\");\n\n  const Verification = async userId => {\n    try {\n      SetVerificationType(await verificationType(userId));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(async () => {\n    await Verification(ID);\n  }, []);\n\n  if (vType === \"New\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        userID: ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (vType === \"Spam\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        align: \"middle\",\n        children: [\" \", ID, \" is marked as a spam account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  } else if (vType === \"Pending\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", ID, \" is Pending verification\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else if (vType === \"Verified\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        align: \"middle\",\n        children: [\" \", ID, \" is verified successfully\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Checkmark, {\n        size: 'xlarge'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true);\n  } else if (vType === \"Rejected\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", ID, \" verification rejected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" Error : \", vType]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Direct, \"T0YsD8um0So0knMvlY0sI9UPL58=\");\n\n_c = Direct;\nexport default Direct;\n\nvar _c;\n\n$RefreshReg$(_c, \"Direct\");","map":{"version":3,"names":["React","useState","useEffect","Loader","Form","Checkmark","verificationType","Direct","ID","vType","SetVerificationType","Verification","userId","error","console","log"],"sources":["D:/Projects/verifiedprofilev2/src/components/Direct.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Form from \"./form\"\r\nimport { Checkmark } from \"react-checkmark\";\r\nimport {\r\n  verificationType,\r\n} from \"./utils/functions\";\r\n\r\n\r\nconst Direct = ({ID}) => {\r\n  const [vType, SetVerificationType] = useState(\" Verification Type Not Found\");\r\n  const Verification = async (userId) => {\r\n    try {\r\n      SetVerificationType(await verificationType(userId));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(async() => {\r\n    await Verification(ID)\r\n  }, []);\r\n  if(vType === \"New\")\r\n  {\r\n    return (\r\n        <>\r\n        <Form userID = {ID}/>\r\n        </>\r\n      );\r\n  }\r\n  else if(vType === \"Spam\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is marked as a spam account</h1>\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Pending\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} is Pending verification</h1>\r\n      <Loader />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Verified\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1 align=\"middle\"> {ID} is verified successfully</h1> <Checkmark size={'xlarge'} />\r\n      </>\r\n    );\r\n  }\r\n  else if(vType === \"Rejected\")\r\n  {\r\n    return (\r\n      <>\r\n      <h1> {ID} verification rejected</h1>\r\n      </>\r\n    );\r\n  }\r\n  return <h1> Error : {vType}</h1>;\r\n};\r\nexport default Direct;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACEC,gBADF,QAEO,mBAFP;;;;AAKA,MAAMC,MAAM,GAAG,QAAU;EAAA;;EAAA,IAAT;IAACC;EAAD,CAAS;EACvB,MAAM,CAACC,KAAD,EAAQC,mBAAR,IAA+BT,QAAQ,CAAC,8BAAD,CAA7C;;EACA,MAAMU,YAAY,GAAG,MAAOC,MAAP,IAAkB;IACrC,IAAI;MACFF,mBAAmB,CAAC,MAAMJ,gBAAgB,CAACM,MAAD,CAAvB,CAAnB;IACD,CAFD,CAEE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAND;;EAOAX,SAAS,CAAC,YAAW;IACnB,MAAMS,YAAY,CAACH,EAAD,CAAlB;EACD,CAFQ,EAEN,EAFM,CAAT;;EAGA,IAAGC,KAAK,KAAK,KAAb,EACA;IACE,oBACI;MAAA,uBACA,QAAC,IAAD;QAAM,MAAM,EAAID;MAAhB;QAAA;QAAA;QAAA;MAAA;IADA,iBADJ;EAKD,CAPD,MAQK,IAAGC,KAAK,KAAK,MAAb,EACL;IACE,oBACE;MAAA,uBACA;QAAI,KAAK,EAAC,QAAV;QAAA,gBAAqBD,EAArB;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAKD,CAPI,MAQA,IAAGC,KAAK,KAAK,SAAb,EACL;IACE,oBACE;MAAA,wBACA;QAAA,gBAAMD,EAAN;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA,gBADF;EAMD,CARI,MASA,IAAGC,KAAK,KAAK,UAAb,EACL;IACE,oBACE;MAAA,wBACA;QAAI,KAAK,EAAC,QAAV;QAAA,gBAAqBD,EAArB;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,oBACuD,QAAC,SAAD;QAAW,IAAI,EAAE;MAAjB;QAAA;QAAA;QAAA;MAAA,QADvD;IAAA,gBADF;EAKD,CAPI,MAQA,IAAGC,KAAK,KAAK,UAAb,EACL;IACE,oBACE;MAAA,uBACA;QAAA,gBAAMD,EAAN;MAAA;QAAA;QAAA;QAAA;MAAA;IADA,iBADF;EAKD;;EACD,oBAAO;IAAA,wBAAcC,KAAd;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAtDD;;GAAMF,M;;KAAAA,M;AAuDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}