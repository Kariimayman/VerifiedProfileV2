{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\verifiedprofilev2\\\\src\\\\components\\\\Functions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Loader from \"./utils/Loader\";\nimport Form from \"./form\";\nimport { isAccountVerified, verifyAccount, createProfile } from \"./utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Functions = () => {\n  _s();\n\n  const [verificationType, SetVerificationType] = useState(\"\");\n  const [userId, setUserId] = useState(\"None\");\n  const [loading, setLoading] = useState(false);\n\n  const getVerification = async (userId, deposit) => {\n    try {\n      setLoading(true);\n      SetVerificationType(await SetVerificationType(isAccountVerified(userId, deposit)));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createNewProfile = async () => {\n    try {\n      setLoading(true);\n      SetVerificationType(await setUserId(createProfile()));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addVerification = async userId => {\n    try {\n      setLoading(true);\n      await verifyAccount({\n        userId\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getVerification(\"kareemayman.testnet\", 10000000),\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" user : \", verificationType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Functions, \"Mi4WL+zHSX7ET6bCJr7OeRrwqm4=\");\n\n_c = Functions;\nexport default Functions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Functions\");","map":{"version":3,"names":["React","useState","Loader","Form","isAccountVerified","verifyAccount","createProfile","Functions","verificationType","SetVerificationType","userId","setUserId","loading","setLoading","getVerification","deposit","error","console","log","createNewProfile","addVerification"],"sources":["D:/Projects/verifiedprofilev2/src/components/Functions.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport Loader from \"./utils/Loader\";\r\nimport Form from \"./form\"\r\nimport {\r\n  isAccountVerified,\r\n  verifyAccount,\r\n  createProfile\r\n} from \"./utils/functions\";\r\n\r\n\r\nconst Functions = () => {\r\n  const [verificationType, SetVerificationType] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"None\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getVerification = async (userId,deposit) => {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await SetVerificationType(isAccountVerified(userId,deposit)));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createNewProfile = async()=> {\r\n    try {\r\n      setLoading(true);\r\n      SetVerificationType(await setUserId(createProfile()));\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n};\r\n\r\nconst addVerification = async (userId) => {\r\n  try {\r\n    setLoading(true);\r\n    await verifyAccount({userId});\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\nreturn (\r\n  <>\r\n    {!loading ? (\r\n        <>\r\n          <button onClick={() => getVerification(\"kareemayman.testnet\", 10000000)}>Create Account</button>\r\n          <h1> user : {verificationType}</h1>\r\n        </>\r\n    ) : (\r\n      <Loader />\r\n    )}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Functions;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SACEC,iBADF,EAEEC,aAFF,EAGEC,aAHF,QAIO,mBAJP;;;;AAOA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,MAAD,CAApC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMa,eAAe,GAAG,OAAOJ,MAAP,EAAcK,OAAd,KAA0B;IAChD,IAAI;MACFF,UAAU,CAAC,IAAD,CAAV;MACAJ,mBAAmB,CAAC,MAAMA,mBAAmB,CAACL,iBAAiB,CAACM,MAAD,EAAQK,OAAR,CAAlB,CAA1B,CAAnB;IACD,CAHD,CAGE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CALD,SAKU;MACRH,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CATD;;EAWA,MAAMM,gBAAgB,GAAG,YAAU;IACjC,IAAI;MACFN,UAAU,CAAC,IAAD,CAAV;MACAJ,mBAAmB,CAAC,MAAME,SAAS,CAACL,aAAa,EAAd,CAAhB,CAAnB;IACD,CAHD,CAGE,OAAOU,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CALD,SAKU;MACRH,UAAU,CAAC,KAAD,CAAV;IACD;EACJ,CATC;;EAWF,MAAMO,eAAe,GAAG,MAAOV,MAAP,IAAkB;IACxC,IAAI;MACFG,UAAU,CAAC,IAAD,CAAV;MACA,MAAMR,aAAa,CAAC;QAACK;MAAD,CAAD,CAAnB;IACD,CAHD,CAGE,OAAOM,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD,CALD,SAKU;MACRH,UAAU,CAAC,KAAD,CAAV;IACD;EACF,CATD;;EAUA,oBACE;IAAA,UACG,CAACD,OAAD,gBACG;MAAA,wBACE;QAAQ,OAAO,EAAE,MAAME,eAAe,CAAC,qBAAD,EAAwB,QAAxB,CAAtC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBAAaN,gBAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADH,gBAMC,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA;EAPJ,iBADF;AAYC,CAjDD;;GAAMD,S;;KAAAA,S;AAmDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}